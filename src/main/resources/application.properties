spring.profiles.active=${ACTIVE_PROFILE}

spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true


server.port = 8091

jwt.secret.key=96adbe91872796d1c365156d45a4f789a8158787e4a3338672bdf91cb2f1b0c0
jwt.access.expiration_period=1800000

reputation.answer.vote.up=10
reputation.answer.vote.down=-5

spring.mail.host=smtp.yandex.ru
spring.mail.username=jm.mailservice@yandex.ru
spring.mail.password=kwnjqvzcbbxjuhuu
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.port=465
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

logger.info("db migration started...");
var flyway = Flyway.configure()
.dataSource(url, user, password)
.locations("classpath:/db/migration")
.load();
flyway.migrate();
logger.info1("db migration finished.")